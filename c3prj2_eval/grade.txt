Grading at Sun May 10 15:48:02 UTC 2020
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 2: Trying hands with pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 5: Trying hands with straights
 Checking the output 
Line_29_did_not_match
Line_30_did_not_match
Line_50_did_not_match
Line_51_did_not_match
Line_58_did_not_match
Line_59_did_not_match
Line_101_did_not_match
Line_102_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
0s 9s 8c 7h 6d 							0s 9s 8c 7h 6d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value 0)	 - The most of a kind is 1 of a kind (at index 0 / value 0)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 0s 9s 8c 7h 6d 			 - 5 cards used for hand: 0s 9s 8c 7h 6d 
Hand 2:								Hand 2:
--------							--------
Js 0c 9s 8d 7c 							Js 0c 9s 8d 7c 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Js 0c 9s 8d 7c 			 - 5 cards used for hand: Js 0c 9s 8d 7c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As 5c 4h 3s 2c 							As 5c 4h 3s 2c 
 - No flush							 - No flush
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT			      |	 - evaluate_hand's ranking: NOTHING
 - 5 cards used for hand: 5c 4h 3s 2c As 		      |	 - 5 cards used for hand: As 5c 4h 3s 2c 
Hand 2:								Hand 2:
--------							--------
6c 5h 4s 3s 2d 							6c 5h 4s 3s 2d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value 6)	 - The most of a kind is 1 of a kind (at index 0 / value 6)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 6c 5h 4s 3s 2d 			 - 5 cards used for hand: 6c 5h 4s 3s 2d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Qh Qs Jd Js 0c 0s 9d 8c 					Qh Qs Jd Js 0c 0s 9d 8c 
 - No flush							 - No flush
 - Straight at index 0					      <
 - Straight at index 1					      <
 - The most of a kind is 2 of a kind (at index 0 / value Q)	 - The most of a kind is 2 of a kind (at index 0 / value Q)
 - Secondary pair at index 2 (value J)				 - Secondary pair at index 2 (value J)
 - evaluate_hand's ranking: STRAIGHT			      |	 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Qh Jd 0c 9d 8c 		      |	 - 5 cards used for hand: Qh Qs Jd Js 0c 
Hand 2:								Hand 2:
--------							--------
Kc Qh Qs Jd Js 0c 0s 9d 					Kc Qh Qs Jd Js 0c 0s 9d 
 - No flush							 - No flush
 - Straight at index 0					      <
 - The most of a kind is 2 of a kind (at index 1 / value Q)	 - The most of a kind is 2 of a kind (at index 1 / value Q)
 - Secondary pair at index 3 (value J)				 - Secondary pair at index 3 (value J)
 - evaluate_hand's ranking: STRAIGHT			      |	 - evaluate_hand's ranking: TWO_PAIR
 - 5 cards used for hand: Kc Qh Jd 0c 9d 		      |	 - 5 cards used for hand: Qh Qs Jd Js Kc 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Jd 9h 8c 7d 6c 5d 						As Jd 9h 8c 7d 6c 5d 
 - No flush							 - No flush
 - Straight at index 2						 - Straight at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 9h 8c 7d 6c 5d 			 - 5 cards used for hand: 9h 8c 7d 6c 5d 
Hand 2:								Hand 2:
--------							--------
Kc Qh 8c 7h 6c 5d 4s 						Kc Qh 8c 7h 6c 5d 4s 
 - No flush							 - No flush
 - Straight at index 2						 - Straight at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: 8c 7h 6c 5d 4s 			 - 5 cards used for hand: 8c 7h 6c 5d 4s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Kd Qs Jd 0s 							As Kd Qs Jd 0s 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: As Kd Qs Jd 0s 			 - 5 cards used for hand: As Kd Qs Jd 0s 
Hand 2:								Hand 2:
--------							--------
Ac 5s 4c 3s 2s 							Ac 5s 4c 3s 2s 
 - No flush							 - No flush
 - Straight at index 0					      <
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT			      |	 - evaluate_hand's ranking: NOTHING
 - 5 cards used for hand: 5s 4c 3s 2s Ac 		      |	 - 5 cards used for hand: Ac 5s 4c 3s 2s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Jh 0s 9c 8s 7c 4c 3d 						Jh 0s 9c 8s 7c 4c 3d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Jh 0s 9c 8s 7c 			 - 5 cards used for hand: Jh 0s 9c 8s 7c 
Hand 2:								Hand 2:
--------							--------
Jh 0s 9c 8s 7c 6c 5d 						Jh 0s 9c 8s 7c 6c 5d 
 - No flush							 - No flush
 - Straight at index 0						 - Straight at index 0
 - Straight at index 1						 - Straight at index 1
 - Straight at index 2						 - Straight at index 2
 - The most of a kind is 1 of a kind (at index 0 / value J)	 - The most of a kind is 1 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT				 - evaluate_hand's ranking: STRAIGHT
 - 5 cards used for hand: Jh 0s 9c 8s 7c 			 - 5 cards used for hand: Jh 0s 9c 8s 7c 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==1097== Memcheck, a memory error detector
==1097== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1097== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1097== Command: ./test-eval inp.9.txt
==1097== Parent PID: 1096
==1097== 
==1097== Invalid read of size 8
==1097==    at 0x401978: is_n_length_straight_at (eval.c:114)
==1097==    by 0x401ADD: is_straight_at (eval.c:142)
==1097==    by 0x4028BE: describe_hand (test-eval.c:46)
==1097==    by 0x402C9B: main (test-eval.c:116)
==1097==  Address 0x52056c8 is 0 bytes after a block of size 40 alloc'd
==1097==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1097==    by 0x4010E3: add_card_to (deck-c4.c:29)
==1097==    by 0x403466: hand_from_string (input.c:49)
==1097==    by 0x402C20: main (test-eval.c:110)
==1097== 
==1097== Invalid read of size 4
==1097==    at 0x40197B: is_n_length_straight_at (eval.c:114)
==1097==    by 0x401ADD: is_straight_at (eval.c:142)
==1097==    by 0x4028BE: describe_hand (test-eval.c:46)
==1097==    by 0x402C9B: main (test-eval.c:116)
==1097==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1097== 
==1097== 
==1097== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1097==  Access not within mapped region at address 0x0
==1097==    at 0x40197B: is_n_length_straight_at (eval.c:114)
==1097==    by 0x401ADD: is_straight_at (eval.c:142)
==1097==    by 0x4028BE: describe_hand (test-eval.c:46)
==1097==    by 0x402C9B: main (test-eval.c:116)
==1097==  If you believe this happened as a result of a stack
==1097==  overflow in your program's main thread (unlikely but
==1097==  possible), you can try to increase the size of the
==1097==  main thread stack using the --main-stacksize= flag.
==1097==  The main thread stack size used in this run was 8388608.
==1097== 
==1097== HEAP SUMMARY:
==1097==     in use at exit: 864 bytes in 16 blocks
==1097==   total heap usage: 26 allocs, 10 frees, 9,216 bytes allocated
==1097== 
==1097== LEAK SUMMARY:
==1097==    definitely lost: 0 bytes in 0 blocks
==1097==    indirectly lost: 0 bytes in 0 blocks
==1097==      possibly lost: 0 bytes in 0 blocks
==1097==    still reachable: 864 bytes in 16 blocks
==1097==         suppressed: 0 bytes in 0 blocks
==1097== Rerun with --leak-check=full to see details of leaked memory
==1097== 
==1097== For counts of detected and suppressed errors, rerun with: -v
==1097== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==1102== Memcheck, a memory error detector
==1102== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1102== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1102== Command: ./test-eval inp.10.txt
==1102== Parent PID: 1101
==1102== 
==1102== Invalid read of size 8
==1102==    at 0x401978: is_n_length_straight_at (eval.c:114)
==1102==    by 0x401ADD: is_straight_at (eval.c:142)
==1102==    by 0x4028BE: describe_hand (test-eval.c:46)
==1102==    by 0x402CBB: main (test-eval.c:119)
==1102==  Address 0x520bb98 is 0 bytes after a block of size 40 alloc'd
==1102==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1102==    by 0x4010E3: add_card_to (deck-c4.c:29)
==1102==    by 0x403466: hand_from_string (input.c:49)
==1102==    by 0x402C35: main (test-eval.c:111)
==1102== 
==1102== Invalid read of size 4
==1102==    at 0x40197B: is_n_length_straight_at (eval.c:114)
==1102==    by 0x401ADD: is_straight_at (eval.c:142)
==1102==    by 0x4028BE: describe_hand (test-eval.c:46)
==1102==    by 0x402CBB: main (test-eval.c:119)
==1102==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1102== 
==1102== 
==1102== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1102==  Access not within mapped region at address 0x0
==1102==    at 0x40197B: is_n_length_straight_at (eval.c:114)
==1102==    by 0x401ADD: is_straight_at (eval.c:142)
==1102==    by 0x4028BE: describe_hand (test-eval.c:46)
==1102==    by 0x402CBB: main (test-eval.c:119)
==1102==  If you believe this happened as a result of a stack
==1102==  overflow in your program's main thread (unlikely but
==1102==  possible), you can try to increase the size of the
==1102==  main thread stack using the --main-stacksize= flag.
==1102==  The main thread stack size used in this run was 8388608.
==1102== 
==1102== HEAP SUMMARY:
==1102==     in use at exit: 880 bytes in 17 blocks
==1102==   total heap usage: 262 allocs, 245 frees, 13,624 bytes allocated
==1102== 
==1102== LEAK SUMMARY:
==1102==    definitely lost: 0 bytes in 0 blocks
==1102==    indirectly lost: 0 bytes in 0 blocks
==1102==      possibly lost: 0 bytes in 0 blocks
==1102==    still reachable: 880 bytes in 17 blocks
==1102==         suppressed: 0 bytes in 0 blocks
==1102== Rerun with --leak-check=full to see details of leaked memory
==1102== 
==1102== For counts of detected and suppressed errors, rerun with: -v
==1102== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: C
